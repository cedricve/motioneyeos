diff --git a/.travis.yml b/.travis.yml
index a4c4dc8..cfd18f6 100755
--- a/.travis.yml
+++ b/.travis.yml
@@ -1,3 +1,7 @@
+branches:
+  except:
+    - buildroot-patch
+
 sudo:
 - false
 os:
diff --git a/cmake/External-Googletest.cmake b/cmake/External-Googletest.cmake
index fd95600..f0b0e1b 100755
--- a/cmake/External-Googletest.cmake
+++ b/cmake/External-Googletest.cmake
@@ -10,7 +10,8 @@ ExternalProject_Add(googletest
   CMAKE_ARGS
     -DCMAKE_BUILD_TYPE:STRING=Release
     -DCMAKE_INSTALL_PREFIX:PATH=${CMAKE_BINARY_DIR}/thirdparty
-    -Dgtest_force_shared_crt=OFF
+    -Dgtest_force_shared_crt=OFF
+    -DCMAKE_TOOLCHAIN_FILE=${CMAKE_SOURCE_DIR}/../../host/usr/share/buildroot/toolchainfile.cmake
   INSTALL_DIR ${CMAKE_BINARY_DIR}/thirdparty
   INSTALL_COMMAND ""
 )
diff --git a/cmake/External-Mosquitto.cmake b/cmake/External-Mosquitto.cmake
index 74ac55c..9d34110 100644
--- a/cmake/External-Mosquitto.cmake
+++ b/cmake/External-Mosquitto.cmake
@@ -10,6 +10,7 @@ ExternalProject_Add(mosquitto
   CMAKE_GENERATOR ${gen}
   INSTALL_COMMAND mkdir -p ../thirdparty/lib/ && cp lib/cpp/libmosquittopp.a ../thirdparty/lib/ && cp lib/libmosquitto.a ../thirdparty/lib/
   CMAKE_ARGS
+    -DCMAKE_TOOLCHAIN_FILE=${CMAKE_SOURCE_DIR}/../../host/usr/share/buildroot/toolchainfile.cmake
     -DCMAKE_INSTALL_PREFIX:PATH=${CMAKE_BINARY_DIR}/thirdparty
     -DWITH_WEBSOCKETS=OFF
     -DWITH_SRV=OFF
diff --git a/cmake/External-OpenCV.cmake b/cmake/External-OpenCV.cmake
index 25adc1e..a8a0e0e 100755
--- a/cmake/External-OpenCV.cmake
+++ b/cmake/External-OpenCV.cmake
@@ -48,12 +48,13 @@ ExternalProject_Add(opencv
     -DBUILD_ZLIB:BOOL=ON
     -DBUILD_WITH_STATIC_CRT:BOOL=ON
     -DBUILD_FAT_JAVA_LIB=OFF
-    -DCMAKE_INSTALL_PREFIX:PATH=${CMAKE_BINARY_DIR}/thirdparty
+    -DCMAKE_TOOLCHAIN_FILE=${CMAKE_SOURCE_DIR}/../../host/usr/share/buildroot/toolchainfile.cmake
+    -DCMAKE_INSTALL_PREFIX:PATH=${CMAKE_SOURCE_DIR}/../../host/usr/arm-buildroot-linux-gnueabihf/sysroot/usr/
 )
 
-set(OPENCV_INCLUDE_DIR ${CMAKE_BINARY_DIR}/thirdparty/include/)
+set(OPENCV_INCLUDE_DIR ${CMAKE_SOURCE_DIR}/../../host/usr/arm-buildroot-linux-gnueabihf/sysroot/usr/include/)
 if(NOT WIN32)
-  set(OPENCV_LIBRARY_DIR ${CMAKE_BINARY_DIR}/thirdparty/lib/)
+  set(OPENCV_LIBRARY_DIR ${CMAKE_SOURCE_DIR}/../../host/usr/arm-buildroot-linux-gnueabihf/sysroot/usr/lib/)
 else()
   set(OPENCV_LIBRARY_DIR ${CMAKE_BINARY_DIR}/thirdparty/x86/vc12/lib)
 endif()
@@ -63,9 +64,9 @@ set(OPENCV_LIBRARIES opencv_imgproc opencv_core opencv_highgui opencv_video open
 include_directories(${OPENCV_INCLUDE_DIR})
 link_directories(${OPENCV_LIBRARY_DIR})
 
-if(EXISTS "${CMAKE_BINARY_DIR}/thirdparty/share/OpenCV/OpenCVConfig.cmake")
-    include(${CMAKE_BINARY_DIR}/thirdparty/share/OpenCV/OpenCVConfig.cmake)
+if(EXISTS "${CMAKE_SOURCE_DIR}/../../host/usr/arm-buildroot-linux-gnueabihf/sysroot/usr/share/OpenCV/OpenCVConfig.cmake")
+    include(${CMAKE_SOURCE_DIR}/../../host/usr/arm-buildroot-linux-gnueabihf/sysroot/usr/share/OpenCV/OpenCVConfig.cmake)
     add_custom_target(rerun)
 else()
     add_custom_target(rerun ${CMAKE_COMMAND} ${CMAKE_SOURCE_DIR} DEPENDS opencv)
-endif()
\ No newline at end of file
+endif()
diff --git a/cmake/External-OpenMax.cmake b/cmake/External-OpenMax.cmake
index 6f2f55c..cba0df1 100755
--- a/cmake/External-OpenMax.cmake
+++ b/cmake/External-OpenMax.cmake
@@ -25,6 +25,7 @@ ExternalProject_Add(openmax
   INSTALL_COMMAND ""
   CMAKE_ARGS
     -DCMAKE_INSTALL_PREFIX:PATH=${CMAKE_BINARY_DIR}/thirdparty
+    -DCMAKE_TOOLCHAIN_FILE=${CMAKE_SOURCE_DIR}/../../host/usr/share/buildroot/toolchainfile.cmake
     -DBUILD_SHARED_LIBS=OFF
 )
 
diff --git a/cmake/External-Restclient.cmake b/cmake/External-Restclient.cmake
index 5cd3a44..1b41703 100755
--- a/cmake/External-Restclient.cmake
+++ b/cmake/External-Restclient.cmake
@@ -7,7 +7,7 @@ ExternalProject_Add(restclient
   BUILD_IN_SOURCE 1
   UPDATE_COMMAND ""
   PATCH_COMMAND ""
-  CONFIGURE_COMMAND ./autogen.sh && ./configure
+  CONFIGURE_COMMAND ./autogen.sh && ./configure --host=arm-linux-gnueabihf
   BUILD_COMMAND make && mkdir -p ../thirdparty/lib/ && cp .libs/librestclient-cpp.a ../thirdparty/lib/
   INSTALL_COMMAND ""
 )
@@ -18,4 +18,4 @@ set(RESTCLIENT_LIBRARY_DIR ${CMAKE_BINARY_DIR}/thirdparty/lib/)
 set(RESTCLIENT_LIBRARIES restclient-cpp curl)
 
 include_directories(${RESTCLIENT_INCLUDE_DIR})
-link_directories(${RESTCLIENT_LIBRARY_DIR})
\ No newline at end of file
+link_directories(${RESTCLIENT_LIBRARY_DIR})
